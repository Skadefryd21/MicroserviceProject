name: CI_dotnet_build_&_test

on: [pull_request, push] 

jobs:
  build-and-test:

    runs-on: [windows-latest]

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Show Dir
      run: ls
      
    - name: Build
      run: dotnet build ./PlatformService/PlatformService.sln
      
    - name: Test
      run: dotnet test ./PlatformService/PlatformRepoTest/PlatformRepoTest.csproj --no-build --verbosity normal
  
  Build-Push-Image-to-GCR: 
    runs-on: [ubuntu-latest]
    needs: build-and-test
    
    # Need to add these 3 lines to add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
      
    env:
      IMAGE_NAME: platformservice
      PROJECT_ID: psychic-surf-420214
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
   
   
      - name: Google auth
        id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
            workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
            # create_credentials_file: true
            service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
            token_format: 'access_token'
            access_token_lifetime: '120s'
    
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
            project_id: '${{ env.PROJECT_ID }}'

      #- name: Build Docker Image
        #working-directory: PlatformService/PlatformService
        #run: docker build -t $IMAGE_NAME:latest .

      - name: Configure Docker Client
        run: |-
            gcloud auth configure-docker europe-west1-docker.pkg.dev
      
      #- name: Push Docker Image to Container Registry (GCR)
        #env:
          #GIT_TAG: v0.1.0
        #run: |-
          #docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          #docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
          #docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          #docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

      - name: 'Build and push container'
        working-directory: PlatformService/PlatformService
        run: |-
            docker build -t $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG .
            docker push $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
      
      - name: 'Create release name'
        run: |-
              echo "RELEASE_NAME=${{ env.APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> ${GITHUB_ENV}
     
     
      - name: 'Create Cloud Deploy release'
        uses: 'google-github-actions/create-cloud-deploy-release@v0'
        with:
            delivery_pipeline: '${{ env.APP }}'
            name: '${{ env.RELEASE_NAME }}'
            region: '${{ env.REGION }}'
            description: '${{ env.GITHUB_COMMIT_MSG }}'
            skaffold_file: 'config/skaffold.yaml'
            images: 'app=$IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG'